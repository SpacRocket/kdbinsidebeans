plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.3.0'
    id 'org.jetbrains.changelog' version '1.3.1'
    id "org.jetbrains.grammarkit" version "2021.2.1"
}

Properties versionProps = new Properties()
versionProps.load(new FileInputStream(file('version.properties')))

group = pluginGroup
version = versionProps['pluginVersion']
sourceCompatibility = pluginJavaVersion
targetCompatibility = pluginJavaVersion

// Configure project's dependencies
repositories {
    mavenCentral()
}

apply plugin: 'idea'
idea {
    module {
        generatedSourceDirs += file('src/main/gen')
    }
}

// Configure gradle-intellij-plugin plugin.
// Read more: https://github.com/JetBrains/gradle-intellij-plugin
apply plugin: 'org.jetbrains.intellij'
intellij {
    pluginName = pluginId

    type = platformType
    version = platformVersion
    downloadSources = platformDownloadSources.toBoolean()
    updateSinceUntilBuild = true

    // Plugin Dependencies. Uses `platformPlugins` property from the gradle.properties file.
    plugins = platformPlugins.split(',').collect { it.trim() as String }
}

apply plugin: 'org.jetbrains.changelog'

apply plugin: 'org.jetbrains.grammarkit'
generateLexer {
    source = "src/main/resources/org/kdb/inside/brains/q.flex"
    targetDir = "src/main/gen/org/kdb/inside/brains"
    targetClass = "QLexer"
    purgeOldFiles = true
}

generateParser {
    source = "src/main/resources/org/kdb/inside/brains/q.bnf"
    targetRoot = 'src/main/gen'
    pathToParser = 'org/kdb/inside/brains/parser/QParser.java'
    pathToPsiRoot = 'org/kdb/inside/brains/psi'
    purgeOldFiles = true
}

dependencies {
    implementation 'org.jfree:jfreesvg:3.4.2'
    implementation 'org.jfree:jfreechart:1.5.3'

    implementation 'org.apache.poi:poi:5.1.0'
    implementation 'org.apache.poi:poi-ooxml:5.1.0'

    testCompile 'org.mockito:mockito-core:4.3.1'

    testCompile 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
}

sourceSets {
    main {
        java.srcDirs 'src/main/gen', 'src/main/java'
        resources.srcDir 'src/main/resources'
    }
    test {
        java.srcDir 'src/test/java'
    }
}

test {
    useJUnitPlatform()
}

task generateCode() {
    dependsOn generateLexer
    dependsOn generateParser
}

compileJava {
    dependsOn generateCode
    options.compilerArgs += ['-Xlint:unchecked', '-Xlint:deprecation']
}

patchPluginXml {
    sinceBuild = pluginSinceBuild
    untilBuild = pluginUntilBuild
    changeNotes = (provider { changelog.getLatest().toHTML() })
}

runPluginVerifier {
    ideVersions = pluginVerifierVersions.split(',').collect { it.trim() as String }
}

publishPlugin {
    token = System.getenv("KDBINSIDEBRAINS_RELEASE_PLUGIN_TOKEN")
}